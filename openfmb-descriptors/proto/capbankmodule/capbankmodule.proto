syntax = "proto3";

// OpenFMB Operational Model (61850-CIM) (v2.0.1) .eap
// Tuesday, December 7, 2021 5:56:45 PM UTC

package capbankmodule;
option go_package = "gitlab.com/openfmb/psm/ops/protobuf/go-openfmb-ops-protobuf/v2/openfmb/capbankmodule";
option java_package = "openfmb.capbankmodule";
option java_multiple_files = true;
option csharp_namespace = "openfmb.capbankmodule";

import "uml.proto";
import "commonmodule/commonmodule.proto";

// Cap bank compensator system
message CapBankSystem
{
    // UML inherited base object
    commonmodule.ConductingEquipment conductingEquipment = 1 [(uml.option_parent_message) = true];
}

// LN: Power cap bank  Name: YPSH
message CapBankControlYPSH
{
    // Current limit (boolean field)
    commonmodule.PhaseSPC AmpLmt = 1;
    // High current  threshold
    commonmodule.PhaseAPC AmpThdHi = 2;
    // Low current threshold
    commonmodule.PhaseAPC AmpThdLo = 3;
    // Control mode auto
    commonmodule.ControlSPC CtlModeAuto = 4;
    // Control mode override
    commonmodule.ControlSPC CtlModeOvrRd = 5;
    // Control mode remote
    commonmodule.ControlSPC CtlModeRem = 6;
    // The control characteristics for power flow operation
    commonmodule.Optional_DirectionModeKind DirMode = 7;
    // (controllable) Position of the switch of power shunt.
    commonmodule.PhaseSPC Pos = 8;
    // Temperature limit (boolean field)
    commonmodule.ControlSPC TempLmt = 9;
    // High temperature threshold
    commonmodule.ControlAPC TempThdHi = 10;
    // Low temperature threshold
    commonmodule.ControlAPC TempThdLo = 11;
    // VAr limit (boolean field)
    commonmodule.PhaseSPC VArLmt = 12;
    // High VAr threshold
    commonmodule.PhaseAPC VArThdHi = 13;
    // Low VAr threshold
    commonmodule.PhaseAPC VArThdLo = 14;
    // Voltage limit (boolean field)
    commonmodule.PhaseSPC VolLmt = 15;
    // High voltage threshold
    commonmodule.PhaseAPC VolThdHi = 16;
    // Low voltage threshold
    commonmodule.PhaseAPC VolThdLo = 17;
}

// Point definition (Point)
message CapBankPoint
{
    // Regulator control
    CapBankControlYPSH control = 1;
    // Start time
    commonmodule.Timestamp startTime = 2 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
}

// Curve shape setting (FC=SP) (CSG_SP)
message CapBankCSG
{
    // The array with the points specifying a curve shape.
    repeated CapBankPoint crvPts = 1 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
}

// OpenFMB specialization for control schedule using:  LN: Schedule   Name: FSCH
message CapBankControlScheduleFSCH
{
    // Control value in CSG type
    CapBankCSG ValCSG = 1 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
}

// Using 61850 FSCC for cap bank control
message CapBankControlFSCC
{
    // UML inherited base object
    commonmodule.ControlFSCC controlFSCC = 1 [(uml.option_parent_message) = true];
    // MISSING DOCUMENTATION!!!
    CapBankControlScheduleFSCH capBankControlScheduleFSCH = 2;
}

// CapBank control
message CapBankControl
{
    // UML inherited base object
    commonmodule.ControlValue controlValue = 1 [(uml.option_parent_message) = true];
    // MISSING DOCUMENTATION!!!
    commonmodule.CheckConditions check = 2;
    // MISSING DOCUMENTATION!!!
    CapBankControlFSCC capBankControlFSCC = 3;
}

// Cap bank control profile.  Instructs an end device (or an end device group) to perform a
// specified action.
message CapBankControlProfile
{
    option (uml.option_openfmb_profile) = true;
    // UML inherited base object
    commonmodule.ControlMessageInfo controlMessageInfo = 1 [(uml.option_parent_message) = true];
    // MISSING DOCUMENTATION!!!
    CapBankControl capBankControl = 2 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
    // MISSING DOCUMENTATION!!!
    CapBankSystem capBankSystem = 3 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
}

// OpenFMB specialization for cap bank discrete control:
message CapBankDiscreteControlYPSH
{
    // UML inherited base object
    commonmodule.LogicalNodeForControl logicalNodeForControl = 1 [(uml.option_parent_message) = true];
    // MISSING DOCUMENTATION!!!
    CapBankControlYPSH control = 2;
}

// Cap bank discrete control
message CapBankDiscreteControl
{
    // UML inherited base object
    commonmodule.ControlValue controlValue = 1 [(uml.option_parent_message) = true];
    // MISSING DOCUMENTATION!!!
    commonmodule.CheckConditions check = 2;
    // MISSING DOCUMENTATION!!!
    CapBankDiscreteControlYPSH capBankDiscreteControlYPSH = 3;
}

// Cap bank discrete control profile.  Instructs an end device (or an end device group) to perform
// a specified action.
message CapBankDiscreteControlProfile
{
    option (uml.option_openfmb_profile) = true;
    // UML inherited base object
    commonmodule.ControlMessageInfo controlMessageInfo = 1 [(uml.option_parent_message) = true];
    // MISSING DOCUMENTATION!!!
    CapBankDiscreteControl capBankControl = 2 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
    // MISSING DOCUMENTATION!!!
    CapBankSystem capBankSystem = 3 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
}

// LN: Power cap bank  Name: YPSH
message CapBankEventAndStatusYPSH
{
    // UML inherited base object
    commonmodule.LogicalNodeForEventAndStatus logicalNodeForEventAndStatus = 1 [(uml.option_parent_message) = true];
    // True if current limit (high, low, or both) are set
    commonmodule.PhaseSPS AmpLmt = 2;
    // Control mode
    commonmodule.Optional_ControlModeKind CtlMode = 3;
    // True if power flow is reversed
    commonmodule.PhaseSPS DirRev = 4;
    // MISSING DOCUMENTATION!!!
    commonmodule.ENS_DynamicTestKind DynamicTest = 5;
    // (controllable) Position of the switch of power shunt.
    commonmodule.PhaseDPS Pos = 6;
    // True if temperature limit (high, low, or both) are set
    commonmodule.PhaseSPS TempLmt = 7;
    // True if VAr limit (high, low, or both) are set
    commonmodule.PhaseSPS VArLmt = 8;
    // True if voltage limit (high, low, or both) are set
    commonmodule.PhaseSPS VolLmt = 9;
}

// Cap bank event
message CapBankEvent
{
    // UML inherited base object
    commonmodule.EventValue eventValue = 1 [(uml.option_parent_message) = true];
    // MISSING DOCUMENTATION!!!
    CapBankEventAndStatusYPSH CapBankEventAndStatusYPSH = 2;
}

// Cap bank status profile
message CapBankEventProfile
{
    option (uml.option_openfmb_profile) = true;
    // UML inherited base object
    commonmodule.EventMessageInfo eventMessageInfo = 1 [(uml.option_parent_message) = true];
    // MISSING DOCUMENTATION!!!
    CapBankEvent capBankEvent = 2 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
    // MISSING DOCUMENTATION!!!
    CapBankSystem capBankSystem = 3 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
}

// Cap bank reading value
message CapBankReading
{
    // UML inherited base object
    commonmodule.ConductingEquipmentTerminalReading conductingEquipmentTerminalReading = 1 [(uml.option_parent_message) = true];
    // MISSING DOCUMENTATION!!!
    commonmodule.PhaseMMTN phaseMMTN = 2;
    // MISSING DOCUMENTATION!!!
    commonmodule.ReadingMMTR readingMMTR = 3;
    // MISSING DOCUMENTATION!!!
    commonmodule.ReadingMMXU readingMMXU = 4;
    // MISSING DOCUMENTATION!!!
    commonmodule.ReadingMMXU secondaryReadingMMXU = 5;
}

// Cap bank reading profile
message CapBankReadingProfile
{
    option (uml.option_openfmb_profile) = true;
    // UML inherited base object
    commonmodule.ReadingMessageInfo readingMessageInfo = 1 [(uml.option_parent_message) = true];
    // MISSING DOCUMENTATION!!!
    CapBankReading capBankReading = 2 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
    // MISSING DOCUMENTATION!!!
    CapBankSystem capBankSystem = 3 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
}

// Cap bank status
message CapBankStatus
{
    // UML inherited base object
    commonmodule.StatusValue statusValue = 1 [(uml.option_parent_message) = true];
    // MISSING DOCUMENTATION!!!
    CapBankEventAndStatusYPSH capBankEventAndStatusYPSH = 2;
}

// Cap bank status profile
message CapBankStatusProfile
{
    option (uml.option_openfmb_profile) = true;
    // UML inherited base object
    commonmodule.StatusMessageInfo statusMessageInfo = 1 [(uml.option_parent_message) = true];
    // MISSING DOCUMENTATION!!!
    CapBankStatus capBankStatus = 2 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
    // MISSING DOCUMENTATION!!!
    CapBankSystem capBankSystem = 3 [(uml.option_required_field) = true, (uml.option_multiplicity_min) = 1];
}

